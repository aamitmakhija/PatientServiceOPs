name: CI/CD Pipeline with Matrix and Central Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - 01-AuthService
          - 02-PatientService
          - 03-AdmissionService
          - 04-WardService
          - api-gateway

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Dependencies and Run Lint/Test
        run: |
          cd ./${{ matrix.service }}
          npm ci
          npx eslint .
          npx nyc mocha

   #   - name: Upload Coverage Report
    #    uses: actions/upload-artifact@v2
     #   with:
      #    name: coverage-${{ matrix.service }}
       #   path: ${{ matrix.service }}/coverage/

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.service }}/coverage/lcov.info
          name: ${{ matrix.service }}

      - name: Build and Push Docker Image
        run: |
          docker build -t amitmakhija2308/${{ matrix.service }}:${{ github.sha }} ./${{ matrix.service }}
          docker tag amitmakhija2308/${{ matrix.service }}:${{ github.sha }} amitmakhija2308/${{ matrix.service }}:latest
          docker push amitmakhija2308/${{ matrix.service }}:${{ github.sha }}
          docker push amitmakhija2308/${{ matrix.service }}:latest
      
      - name: Debug Email Vars
        if: failure()
        run: |
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}"
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}"
          echo "SMTP_USERNAME set? ${{ secrets.SMTP_USERNAME != '' }}"
          echo "MAIL_RECIPIENT set? ${{ secrets.MAIL_RECIPIENT != '' }}"      

      - name: Send Email on Failure via SMTP
        if: failure()
        run: |
          echo "Subject: CI/CD Failed for ${{ github.repository }}" > email.txt
          echo "To: ${{ secrets.MAIL_RECIPIENT }}" >> email.txt
          echo "" >> email.txt
          echo "CI/CD workflow failed on branch ${{ github.ref }}." >> email.txt
          echo "Check the GitHub Actions logs for more details." >> email.txt

          curl --insecure --url "smtp://${{ secrets.SMTP_SERVER }}:${{ secrets.SMTP_PORT }}" \
            --ssl-reqd \
            --mail-from "${{ secrets.SMTP_USERNAME }}" \
            --mail-rcpt "${{ secrets.MAIL_RECIPIENT }}" \
            --upload-file email.txt \
            --user "${{ secrets.SMTP_USERNAME }}:${{ secrets.SMTP_PASSWORD }}"

  run-central-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Central Test Suite
        run: npm test

      - name: Generate Coverage Report
        run: npm run coverage

   #   - name: Upload Root Coverage Report
    #    uses: actions/upload-artifact@v2
     #   with:
      #    name: coverage-root
       #   path: coverage/